{"version":3,"file":"static/js/592.e5b4621f.chunk.js","mappings":"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","sources":["services/formatRuntime.js","pages/MovieDetails.js"],"sourcesContent":["export const formatRuntimeEn = time => {\n  if (time) {\n    const hours = Math.floor(time / 60);\n    const min = time % 60;\n    const result = hours > 0 ? `${hours}h ${min}m` : `${min}m`;\n    return result;\n  }\n};\n\nexport const formatRuntimeUa = time => {\n  if (time) {\n    const hours = Math.floor(time / 60);\n    const min = time % 60;\n    const result = hours > 0 ? `${hours}г ${min}хв` : `${min}хв`;\n    return result;\n  }\n};\n","import {\n  DetailsDescr,\n  DetailsImg,\n  DetailsName,\n  Bold,\n} from 'components/DetailsComps/DetailsComps';\nimport {\n  StyledBtn,\n  StyledLinkBtn,\n  BackLinkBtn,\n} from 'components/Buttons/Buttons';\nimport {\n  PageWrap,\n  Box,\n  MainInfo,\n  BtnContainer,\n  ImgThumb,\n} from 'components/Box/Box';\nimport { useState, useEffect, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieById } from 'services/api';\nimport PageError from 'pages/PageError';\nimport Modal from 'components/Modal/Modal';\nimport imageplaceholder from 'images/noposter.jpg';\nimport { Suspense } from 'react';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport { t } from 'i18next';\nimport { formatRuntimeEn, formatRuntimeUa } from 'services/formatRuntime';\nimport { ImStarHalf } from 'react-icons/im';\n\nexport default function MovieDetails({ toggleMovieInLibrary, movies }) {\n  const [movieItem, setMovieItem] = useState(null);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const params = useParams();\n  const backLink = useRef(location.state?.from ?? '/');\n  const [saved, setSaved] = useState(\n    movies.includes(params.movieId) ? true : false\n  );\n  const [showModal, setShowModal] = useState(false);\n  const lang = t('lang');\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const toggleSaveBtn = () => {\n    setSaved(!saved);\n  };\n\n  const handleSaveToLib = () => {\n    toggleMovieInLibrary(params.movieId);\n    toggleSaveBtn();\n  };\n\n  useEffect(() => {\n    fetchMovieById(params.movieId, lang)\n      .then(data => {\n        setMovieItem(data);\n        document.title = `My Movies | ${data.title}`;\n      })\n      .catch(error => {\n        setError(true);\n      });\n  }, [lang, params.movieId]);\n\n  return (\n    <PageWrap>\n      <BackLinkBtn to={backLink.current}>\n        {!backLink.current.pathname ? t('buttons.home') : t('buttons.back')}\n      </BackLinkBtn>\n\n      {error && <PageError />}\n\n      {movieItem && (\n        <>\n          <DetailsName>{movieItem.title}</DetailsName>\n          <MainInfo>\n            <ImgThumb>\n              <DetailsImg\n                width=\"200\"\n                src={\n                  movieItem.poster_path\n                    ? `https://image.tmdb.org/t/p/w200/${movieItem.poster_path}`\n                    : imageplaceholder\n                }\n                alt={`${movieItem.title}`}\n                onClick={toggleModal}\n              />\n            </ImgThumb>\n\n            <Box>\n              <DetailsDescr>\n                {(movieItem.release_date ?? movieItem.first_air_date).slice(\n                  0,\n                  4\n                )}\n              </DetailsDescr>\n\n              <DetailsDescr>\n                {movieItem.genres.map(genre => genre.name).join(', ')}\n              </DetailsDescr>\n\n              {movieItem.runtime > 0 && (\n                <DetailsDescr>\n                  {lang === 'uk-UA'\n                    ? `${formatRuntimeUa(movieItem.runtime)}`\n                    : `${formatRuntimeEn(movieItem.runtime)}`}\n                </DetailsDescr>\n              )}\n\n              {movieItem.vote_average > 0 && (\n                <DetailsDescr>\n                  <ImStarHalf />{' '}\n                  <Bold bold={movieItem.vote_average > 7}>\n                    {movieItem.vote_average.toFixed(1)}\n                  </Bold>\n                  /10\n                </DetailsDescr>\n              )}\n\n              <BtnContainer>\n                <StyledLinkBtn to=\"overview\" state={movieItem.overview}>\n                  {t('buttons.overview')}\n                </StyledLinkBtn>\n                <StyledLinkBtn to=\"cast\">{t('buttons.cast')}</StyledLinkBtn>\n                <StyledLinkBtn to=\"reviews\">\n                  {t('buttons.reviews')}\n                </StyledLinkBtn>\n                <StyledLinkBtn to=\"trailer\">\n                  {t('buttons.trailer')}\n                </StyledLinkBtn>\n                <StyledBtn onClick={handleSaveToLib} saved={saved}>\n                  {saved ? t('buttons.saved') : t('buttons.save')}\n                </StyledBtn>\n              </BtnContainer>\n            </Box>\n          </MainInfo>\n\n          <Suspense\n            fallback={\n              <Box display=\"flex\" justifyContent=\"center\">\n                <ThreeCircles\n                  height=\"100\"\n                  width=\"100\"\n                  color=\"#bcc3ce\"\n                  ariaLabel=\"Three-Circles-rotating\"\n                  visible={true}\n                />\n              </Box>\n            }\n          >\n            <Outlet />\n          </Suspense>\n\n          {showModal && (\n            <Modal onClose={toggleModal}>\n              <img\n                width=\"100%\"\n                src={\n                  movieItem.poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${movieItem.poster_path}`\n                    : imageplaceholder\n                }\n                alt={`${movieItem.original_title}`}\n              />\n            </Modal>\n          )}\n        </>\n      )}\n    </PageWrap>\n  );\n}\n\nMovieDetails.propTypes = {\n  toggleMovieInLibrary: PropTypes.func.isRequired,\n  movies: PropTypes.array.isRequired,\n};\n"],"names":["formatRuntimeEn","time","hours","Math","floor","min","formatRuntimeUa","MovieDetails","toggleMovieInLibrary","movies","useState","movieItem","setMovieItem","error","setError","location","useLocation","params","useParams","backLink","useRef","state","from","includes","movieId","saved","setSaved","showModal","setShowModal","lang","t","toggleModal","useEffect","fetchMovieById","then","data","document","title","catch","to","current","pathname","PageError","width","src","poster_path","imageplaceholder","alt","onClick","Box","release_date","first_air_date","slice","genres","map","genre","name","join","runtime","vote_average","bold","toFixed","overview","Suspense","fallback","display","justifyContent","height","color","ariaLabel","visible","Modal","onClose","original_title"],"sourceRoot":""}