{"version":3,"file":"static/js/687.c9d544da.chunk.js","mappings":"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","sources":["components/BaseComps/BaseComps.tsx","components/MovieCard/MovieCard.styled.tsx","components/MovieCard/MovieCard.tsx","services/api.ts"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h2`\n  color: ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px;\n  gap: ${(p: { theme: { space: number[]; }; }) => p.theme.space[3]}px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  box-shadow: none;\n  cursor: pointer;\n\n  transition: box-shadow 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${(p: { theme: { shadows: { blackShadow: string; }; }; }) => p.theme.shadows.blackShadow};\n  }\n`;\n","import styled from \"@emotion/styled/macro\";\n\nexport const MovieThumb = styled.div`\n  position: relative;\n  width: 200px;\n  height: 300px;\n  overflow: hidden;\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  padding-bottom: ${(p: { theme: { space: number[]; }; }) => p.theme.space[2]}px;\n  background-color:  ${(p: { theme: { colors: { bcgTitle: string; }; }; }) => p.theme.colors.bcgTitle};\n  color:  ${(p: { theme: { colors: { textSecondary: string; }; }; }) => p.theme.colors.textSecondary};\n  font-size: 18px;\n  font-weight: 700;\n  text-align: center;\n\n  transform: translateY(100%);\n  transition: transform 250ms ease;\n\n  ${MovieThumb}:hover &,\n  ${MovieThumb}:focus & {\n    transform: translateY(0);\n  }\n`;\n\nexport const MovieYear = styled.p`\n  font-style: italic;\n  font-weight: 400;\n`\n","import {\n  MovieThumb,\n  MovieImg,\n  MovieTitle,\n  MovieYear,\n} from 'components/MovieCard/MovieCard.styled';\nimport { noposter } from 'images';\nimport { IMovie } from 'components/types';\nimport { FC } from 'react';\n\ntype MovieProps = {\n  movie: IMovie;\n};\n\nexport const MovieCard: FC<MovieProps> = ({ movie }) => {\n  let movieYear = '';\n  if (movie.release_date ?? movie.first_air_date) {\n    movieYear = (movie.release_date ?? movie.first_air_date).slice(0, 4);\n  }\n\n  return (\n    <MovieThumb>\n      <MovieImg\n        width=\"200\"\n        src={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n            : noposter\n        }\n        alt={movie.original_title ?? movie.name}\n        loading=\"lazy\"\n      />\n      <MovieTitle>\n        <p>{movie.title ?? movie.name}</p>\n        <MovieYear>{movieYear}</MovieYear>\n      </MovieTitle>\n    </MovieThumb>\n  );\n};\n","import axios from 'axios';\n\nconst MAIN_URL = process.env.REACT_APP_MAIN_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst fetchTrends = async (lang: string, page: number, abortSignal: AbortSignal) => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=${page}`, {signal: abortSignal});\n  return response.data;\n};\n\nconst fetchMovies = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchLibraryMovies = async (array: any[], lang: string) => {\n  const arrayOfMovies = array.map(async movie_id => {\n    return await axios\n      .get(`${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfMovies);\n  return response;\n};\n\nconst fetchActors = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/person?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchActorById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchAlbumActors = async (array: any[], lang: string) => {\n  const arrayOfActors = array.map(async actor_id => {\n    return await axios\n      .get(`${MAIN_URL}/person/${actor_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfActors);\n  return response;\n};\n\nconst fetchMoviesByActor = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/movie_credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchImagesByActor = async (id: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovieTrailer,\n  fetchLibraryMovies,\n  fetchActors,\n  fetchActorById,\n  fetchAlbumActors,\n  fetchMoviesByActor,\n  fetchImagesByActor,\n};\n"],"names":["PageTitle","styled","p","theme","colors","textPrimary","List","space","Item","shadows","blackShadow","MovieThumb","MovieImg","MovieTitle","bcgTitle","textSecondary","MovieYear","MovieCard","movie","movieYear","release_date","first_air_date","slice","width","src","poster_path","noposter","alt","original_title","name","loading","title","MAIN_URL","process","API_KEY","fetchTrends","lang","page","abortSignal","axios","signal","response","data","fetchMovies","query","fetchMovieById","id","fetchCastById","fetchReviewsById","fetchMovieTrailer","fetchLibraryMovies","array","arrayOfMovies","map","movie_id","then","catch","error","console","log","Promise","all","fetchActors","fetchActorById","fetchAlbumActors","arrayOfActors","actor_id","fetchMoviesByActor","fetchImagesByActor"],"sourceRoot":""}