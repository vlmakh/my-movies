{"version":3,"file":"static/js/293.f785957a.chunk.js","mappings":"uLAGaA,GAAmBC,EAAAA,EAAAA,GAAOC,IAAPD,CAAH,8eAKd,SAACE,GAAD,OAAmDA,EAAEC,MAAMC,UAAUC,CAArE,IAQF,SAACH,GAAD,OAA0DA,EAAEC,MAAMG,OAAOC,WAAzE,IAKE,SAACL,GAAD,OAAqDA,EAAEC,MAAMG,OAAOE,MAApE,IAKF,SAACN,GAAD,OAAqDA,EAAEC,MAAMG,OAAOE,MAApE,G,+LCfE,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAwB,IAApD,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAcC,OAAOH,EAAYI,IAAI,SACvCD,OAAOH,EAAYI,IAAI,SACvB,EACEC,GAAOC,EAAAA,EAAAA,GAAE,SAEfC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAUvB,OATAC,SAASC,MAAQ,aAEjBC,EAAAA,EAAAA,IAAYP,EAAMH,EAAaM,EAAWK,QACvCC,MAAK,SAAAC,GACJrB,EAAUqB,EAAKC,SACfpB,EAAcmB,EAAKE,YACpB,IACAC,OAAM,SAAAC,GAAW,IAEb,WACLX,EAAWY,OACZ,CACF,GAAE,CAACf,EAAMH,EAAaD,IAMvB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WAAYK,EAAAA,EAAAA,GAAE,qBAEd,SAAC,KAAD,UACGb,EAAO4B,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,WACE,SAAC,KAAD,CAASC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAM7B,GAAlD,UACE,SAAC,IAAD,CAAW8B,MAAOL,OAFXA,EAAME,GADF,MASlB7B,EAAa,IACZ,SAAC,IAAD,CACEiC,WAAW,MACXC,UAAU,IACVC,aAtBgB,SAACC,GACvB9B,EAAe,CAAE+B,KAAMD,EAAEE,SAAW,GACrC,EAqBOC,mBAAoB,EACpBC,UAAWxC,EACXyC,cAAc,IACdC,sBAAsB,WACtBC,gBAAgB,aAChBC,UAAWrC,EAAc,MAKlC,C","sources":["components/Pagination/Pagination.tsx","pages/Home.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const PaginationStyled = styled(ReactPaginate)`\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  margin-top: 16px;\n  font-size: ${(p: { theme: { fontSizes: { s: string; }; }; }) => p.theme.fontSizes.s};\n  font-weight: 700;\n\n  @media (max-width: 479.98px) {\n    flex-wrap: wrap;\n  }\n\n  & li {\n    color: ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n\n    transition: color 250ms linear;\n\n    :hover:not(.disabled) {\n      color: ${(p: { theme: { colors: { accent: string; }; }; }) => p.theme.colors.accent};\n    }\n  }\n\n  & .activePage {\n    color: ${(p: { theme: { colors: { accent: string; }; }; }) => p.theme.colors.accent};\n  }\n\n  & a {\n    padding: 0 8px;\n    cursor: pointer;\n  }\n\n  & a.disabled {\n    cursor: default;\n  }\n`;\n","import { PageWrap } from 'components/Box/Box';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchTrends } from 'services/api';\nimport { PageTitle, List, Item } from 'components/BaseComps/BaseComps';\nimport 'index.css';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { PaginationStyled } from 'components/Pagination/Pagination';\nimport { t } from 'i18next';\nimport { IMovie } from 'components/types';\n\nexport default function Home() {\n  const [trends, setTrends] = useState<Array<IMovie>>([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useSearchParams() as any;\n  const currentPage = Number(searchQuery.get('page'))\n    ? Number(searchQuery.get('page'))\n    : 1;\n  const lang = t('lang');\n\n  useEffect(() => {\n    const controller = new AbortController();\n    document.title = 'My Movies';\n\n    fetchTrends(lang, currentPage, controller.signal)\n      .then(data => {\n        setTrends(data.results);\n        setTotalPages(data.total_pages);\n      })\n      .catch(error => {});\n    \n    return () => {\n      controller.abort();\n    }\n  }, [lang, currentPage, setSearchQuery]);\n\n  const handlePageClick = (e: { selected: number; }) => {\n    setSearchQuery({ page: e.selected + 1 });\n  };\n\n  return (\n    <PageWrap>\n      <PageTitle>{t('title.trending')}</PageTitle>\n\n      <List>\n        {trends.map(trend => (\n          <Item key={trend.id}>\n            <NavLink to={`movies/${trend.id}`} state={{ from: location }}>\n              <MovieCard movie={trend} />\n            </NavLink>\n          </Item>\n        ))}\n      </List>\n\n      {totalPages > 1 && (\n        <PaginationStyled\n          breakLabel=\"...\"\n          nextLabel=\">\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={5}\n          pageCount={totalPages}\n          previousLabel=\"<\"\n          disabledLinkClassName=\"disabled\"\n          activeClassName=\"activePage\"\n          forcePage={currentPage - 1}\n        />\n      )}\n    </PageWrap>\n  );\n}\n"],"names":["PaginationStyled","styled","ReactPaginate","p","theme","fontSizes","s","colors","textPrimary","accent","Home","useState","trends","setTrends","totalPages","setTotalPages","location","useLocation","useSearchParams","searchQuery","setSearchQuery","currentPage","Number","get","lang","t","useEffect","controller","AbortController","document","title","fetchTrends","signal","then","data","results","total_pages","catch","error","abort","map","trend","to","id","state","from","movie","breakLabel","nextLabel","onPageChange","e","page","selected","pageRangeDisplayed","pageCount","previousLabel","disabledLinkClassName","activeClassName","forcePage"],"sourceRoot":""}