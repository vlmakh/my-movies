{"version":3,"file":"static/js/764.abf05d97.chunk.js","mappings":"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","sources":["components/Background/Background.jsx","components/Pagination/Pagination.jsx","components/SearchComps/SearchComps.jsx","pages/Movies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport bcgMovies from 'images/bcg-movies01.jpg';\nimport bcgActors from 'images/bcg-actors01.jpg';\n\nexport const BcgMovies = styled.div`\n  margin: ${p => p.theme.space[4]}px auto 0;\n  max-width: 1280px;\n  height: 720px;\n  background-image: radial-gradient(\n      at center,\n      rgba(59, 67, 81, 0.2),\n      ${p => p.theme.colors.bcgMain} 70%\n    ),\n    url(${bcgMovies});\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n`;\n\nexport const BcgActors = styled.div`\n  margin: ${p => p.theme.space[4]}px auto 0;\n  max-width: 1280px;\n  height: 720px;\n  background-image: radial-gradient(\n      at center,\n      rgba(59, 67, 81, 0.2),\n      ${p => p.theme.colors.bcgMain} 70%\n    ),\n    url(${bcgActors});\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n`;\n","import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const PaginationStyled = styled(ReactPaginate)`\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  margin-top: 16px;\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: 700;\n\n  @media (max-width: 479.98px) {\n    flex-wrap: wrap;\n  }\n\n  & li {\n    color: ${p => p.theme.colors.textPrimary};\n\n    transition: color 250ms linear;\n\n    :hover:not(.disabled) {\n      color: ${p => p.theme.colors.accent};\n    }\n  }\n\n  & .activePage {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  & a {\n    padding: 0 8px;\n    cursor: pointer;\n  }\n\n  & a.disabled {\n    cursor: default;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  margin: 0 auto;\n  max-width: 400px;\n`;\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  padding: 4px 8px;\n\n  &:hover + button {\n    color: ${p => p.theme.colors.bcgBtn};\n  }\n`;\n","import { BcgMovies } from 'components/Background/Background';\nimport { List, Item } from 'components/BaseComps/BaseComps';\nimport { SearchForm, SearchInput } from 'components/SearchComps/SearchComps';\nimport { SearchBtn, ClearBtn } from 'components/Buttons/Buttons';\nimport { PaginationStyled } from 'components/Pagination/Pagination';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport 'index.css';\nimport { NavLink } from 'react-router-dom';\nimport { Box, PageWrap } from 'components/Box/Box';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/api';\nimport { IoIosCloseCircle } from 'react-icons/io';\nimport toast from 'react-hot-toast';\nimport { t } from 'i18next';\n\nexport default function Movies() {\n  const [moviesFound, setMoviesFound] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('search');\n  const currentPage = Number(searchQuery.get('page'))\n    ? Number(searchQuery.get('page'))\n    : 1;\n  const [input, setInput] = useState(query ?? '');\n  const location = useLocation();\n  const [totalPages, setTotalPages] = useState(0);\n  const lang = t('lang');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    fetchMovies(query, currentPage, lang)\n      .then(data => {\n        if (!data.results.length) {\n          return toast.error(t('noResults'));\n        } else {\n          setTotalPages(data.total_pages);\n          setMoviesFound([...data.results]);\n        }\n      })\n      .catch(error => console.log(error));\n  }, [lang, currentPage, query]);\n\n  const onSearchInput = event => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!input.trim()) {\n      return toast.error(t('emptyQuery'));\n    }\n    if (input.trim() !== query) {\n      setMoviesFound([]);\n      setSearchQuery({ search: input.trim(), page: 1 });\n    }\n  };\n\n  const clearAll = () => {\n    setInput('');\n    setMoviesFound([]);\n    setSearchQuery({ search: '', page: 0 });\n    setTotalPages(0);\n  };\n\n  const handlePageClick = e => {\n    setSearchQuery({ search: input, page: e.selected + 1 });\n  };\n\n  return (\n    <PageWrap>\n      <SearchForm onSubmit={handleSubmit}>\n        <Box position=\"relative\" flexGrow=\"1\">\n          <SearchInput\n            type=\"text\"\n            value={input}\n            onChange={onSearchInput}\n            placeholder={t('placeholders.film')}\n          />\n          <ClearBtn type=\"button\" onClick={clearAll}>\n            <IoIosCloseCircle size=\"20\" />\n          </ClearBtn>\n        </Box>\n        <SearchBtn type=\"submit\">{t('buttons.search')}</SearchBtn>\n      </SearchForm>\n\n      {!moviesFound.length && <BcgMovies />}\n\n      <List>\n        {moviesFound.map(movie => (\n          <Item key={movie.id}>\n            <NavLink to={`${movie.id}`} state={{ from: location }}>\n              <MovieCard movie={movie} />\n            </NavLink>\n          </Item>\n        ))}\n      </List>\n\n      {totalPages > 1 && (\n        <PaginationStyled\n          breakLabel=\"...\"\n          nextLabel=\">\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={5}\n          pageCount={totalPages}\n          previousLabel=\"<\"\n          renderOnZeroPageCount={null}\n          disabledLinkClassName=\"disabled\"\n          activeClassName=\"activePage\"\n          forcePage={currentPage - 1}\n        />\n      )}\n    </PageWrap>\n  );\n}\n"],"names":["BcgMovies","styled","p","theme","space","colors","bcgMain","bcgMovies","BcgActors","bcgActors","PaginationStyled","ReactPaginate","fontSizes","s","textPrimary","accent","SearchForm","SearchInput","bcgBtn","Movies","useState","moviesFound","setMoviesFound","useSearchParams","searchQuery","setSearchQuery","query","get","currentPage","Number","input","setInput","location","useLocation","totalPages","setTotalPages","lang","t","useEffect","fetchMovies","then","data","results","length","toast","total_pages","catch","error","console","log","onSubmit","event","preventDefault","trim","search","page","position","flexGrow","type","value","onChange","target","placeholder","onClick","size","map","movie","to","id","state","from","breakLabel","nextLabel","onPageChange","e","selected","pageRangeDisplayed","pageCount","previousLabel","renderOnZeroPageCount","disabledLinkClassName","activeClassName","forcePage"],"sourceRoot":""}