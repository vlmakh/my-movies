{"version":3,"file":"static/js/848.19a2cf93.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.tsx","components/Reviews/Reviews.tsx","services/api.ts"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewList = styled.ul`\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px;\n  list-style: none;\n`;\n\nexport const ReviewAuthor = styled.h4`\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[3]}px;\n  color: ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n`;\n\nexport const ReviewText = styled.p`\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[3]}px;\n  font-size: ${(p: { theme: { fontSizes: { xs: string; }; }; }) => p.theme.fontSizes.xs};\n  color:  ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n`;\n\nexport const ReviewNot = styled.p`\n  padding-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px;\n  color: ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n`;\n","import {\n  ReviewList,\n  ReviewAuthor,\n  ReviewText,\n  ReviewNot,\n} from './Reviews.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from 'services/api';\nimport { t } from 'i18next';\nimport { IReview } from 'components/types';\n\nexport default function Reviews() {\n  const params = useParams() as any;\n  const [reviews, setReviews] = useState<Array<IReview>>([]);\n  const lang = t('lang');\n\n  useEffect(() => {\n    fetchReviewsById(params.movieId, lang).then(data => {\n      setReviews(data.results);\n    });\n  }, [lang, params.movieId]);\n\n  return (\n    <>\n      {!reviews.length ? (\n        <ReviewNot>{t('notFoundMsg')}</ReviewNot>\n      ) : (\n        <ReviewList>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <ReviewAuthor>{review.author}</ReviewAuthor>\n              <ReviewText>{review.content}</ReviewText>\n            </li>\n          ))}\n        </ReviewList>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst MAIN_URL = process.env.REACT_APP_MAIN_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst fetchTrends = async (lang: string, page: number, abortSignal: AbortSignal) => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=${page}`, {signal: abortSignal});\n  return response.data;\n};\n\nconst fetchMovies = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchLibraryMovies = async (array: any[], lang: string) => {\n  const arrayOfMovies = array.map(async movie_id => {\n    return await axios\n      .get(`${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfMovies);\n  return response;\n};\n\nconst fetchActors = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/person?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchActorById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchAlbumActors = async (array: any[], lang: string) => {\n  const arrayOfActors = array.map(async actor_id => {\n    return await axios\n      .get(`${MAIN_URL}/person/${actor_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfActors);\n  return response;\n};\n\nconst fetchMoviesByActor = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/movie_credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchImagesByActor = async (id: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovieTrailer,\n  fetchLibraryMovies,\n  fetchActors,\n  fetchActorById,\n  fetchAlbumActors,\n  fetchMoviesByActor,\n  fetchImagesByActor,\n};\n"],"names":["ReviewList","styled","p","theme","space","ReviewAuthor","colors","textPrimary","ReviewText","fontSizes","xs","ReviewNot","Reviews","params","useParams","useState","reviews","setReviews","lang","t","useEffect","fetchReviewsById","movieId","then","data","results","length","map","review","author","content","id","MAIN_URL","process","API_KEY","fetchTrends","page","abortSignal","axios","signal","response","fetchMovies","query","fetchMovieById","fetchCastById","fetchMovieTrailer","fetchLibraryMovies","array","arrayOfMovies","movie_id","catch","error","console","log","Promise","all","fetchActors","fetchActorById","fetchAlbumActors","arrayOfActors","actor_id","fetchMoviesByActor","fetchImagesByActor"],"sourceRoot":""}