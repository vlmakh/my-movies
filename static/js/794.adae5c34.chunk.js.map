{"version":3,"file":"static/js/794.adae5c34.chunk.js","mappings":"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","sources":["components/DetailsComps/DetailsComps.tsx","components/Modal/Modal.styled.tsx","components/Modal/Modal.tsx","services/formatDate.ts","pages/ActorDetails.tsx","pages/PageError.tsx","services/api.ts"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const DetailsName = styled.h1`\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px;\n  font-size: ${(p: { theme: { fontSizes: { l: string; }; }; }) => p.theme.fontSizes.l};\n  color: ${(p: { theme: { colors: { textTitle: string; }; }; }) => p.theme.colors.textTitle};\n  text-align: center;\n`;\n\nexport const DetailsImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  cursor: pointer;\n`;\n\nexport const DetailsDescr = styled.p`\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px;\n  color: ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n  \n\n  @media (max-width: 479.98px) {\n    text-align: center;\n  }\n`;\n\nexport const Bold = styled.span`\n  font-weight: ${(p: {bold: string}) => p.bold ? '700' : '400'};\n`;\n\nexport const DetailsHomePage = styled.a`\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px;\n  color: ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n  text-decoration: none;\n\n  transition: color 250ms linear;\n\n  :hover,\n  :focus {\n    color: ${(p: { theme: { colors: { accent: string; }; }; }) => p.theme.colors.accent};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  width: 500px;\n  max-height: calc(100vh - 24px);\n  overflow-y: clip;\n  overflow-x: visible;  \n\n @media (max-width: 480px) {\n    width: 100%;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Overlay, ModalWindow } from './Modal.styled';\nimport { createPortal } from 'react-dom';\nimport { IPortalProps } from 'components/types';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLDivElement;\n\nexport default function Modal({ onClose, children }: IPortalProps) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = (event: { code: string; }) => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdrop = (event: { currentTarget: any; target: any; }) => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdrop}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n","import { format } from 'date-fns';\nimport { uk } from 'date-fns/locale';\n\nexport const formatDateEn = (date: string) => {\n  if (date) {\n    return format(Date.parse(date), 'MMMM dd, yyyy');\n  }\n};\n\nexport const formatDateUa = (date: string) => {\n  if (date) {\n    return format(Date.parse(date), 'dd MMMM yyyy', { locale: uk });\n  }\n};\n","import {\n  DetailsDescr,\n  DetailsImg,\n  DetailsHomePage,\n  DetailsName,\n} from 'components/DetailsComps/DetailsComps';\nimport {\n  StyledBtn,\n  StyledLinkBtn,\n  BackLinkBtn,\n} from 'components/Buttons/Buttons';\nimport {\n  PageWrap,\n  Box,\n  MainInfo,\n  BtnContainer,\n  ImgThumb,\n} from 'components/Box/Box';\nimport { useState, useEffect, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchActorById } from 'services/api';\nimport PageError from 'pages/PageError';\nimport Modal from 'components/Modal/Modal';\nimport imageplaceholder from 'images/noposter.jpg';\nimport { formatDateEn, formatDateUa } from 'services/formatDate';\nimport { Suspense } from 'react';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { t } from 'i18next';\nimport { ActorDetailsType, IActor } from 'components/types';\n\nexport default function ActorDetails({ actors, toggleActorsInAlbum }: ActorDetailsType) {\n  const [personInfo, setPersonInfo] = useState<IActor | null>(null);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const params = useParams() as any;\n  const [saved, setSaved] = useState(\n    actors.includes(params.actorId) ? true : false\n  );\n  const backLink = useRef(location.state?.from ?? '/');\n  const [showModal, setShowModal] = useState(false);\n  const lang = t('lang');\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  useEffect(() => {\n    fetchActorById(params.actorId, lang)\n      .then(data => {\n        setPersonInfo(data);\n        document.title = `My Movies | ${data.name}`;\n      })\n      .catch(error => {\n        setError(true);\n      });\n  }, [lang, params.actorId]);\n\n  const toggleSaveBtn = () => {\n    setSaved(!saved);\n  };\n\n  const handleSaveToAlbum = () => {\n    toggleActorsInAlbum(params.actorId);\n    toggleSaveBtn();\n  };\n\n  return (\n    <PageWrap>\n      <BackLinkBtn to={backLink.current}>\n        {!backLink.current.pathname ? t('buttons.home') : t('buttons.back')}\n      </BackLinkBtn>\n\n      {error && <PageError />}\n\n      {personInfo && (\n        <>\n          <DetailsName>{personInfo.name}</DetailsName>\n          <MainInfo>\n            <ImgThumb>\n              <DetailsImg\n                width=\"200\"\n                src={\n                  personInfo.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${personInfo.profile_path}`\n                    : imageplaceholder\n                }\n                alt={`${personInfo.name}`}\n                onClick={toggleModal}\n              />\n            </ImgThumb>\n\n            <Box>\n              {personInfo.birthday && (\n                <DetailsDescr>\n                  {t('actor.birth')}\n                  {lang === 'uk-UA'\n                    ? `${formatDateUa(personInfo.birthday)}`\n                    : `${formatDateEn(personInfo.birthday)}`}\n                </DetailsDescr>\n              )}\n              {personInfo.deathday && (\n                <DetailsDescr>\n                  {t('actor.death')}\n                  {lang === 'uk-UA'\n                    ? `${formatDateUa(personInfo.deathday)}`\n                    : `${formatDateEn(personInfo.deathday)}`}\n                </DetailsDescr>\n              )}\n              {personInfo.homepage && (\n                <DetailsDescr>\n                  {t('actor.homepage')}\n                  <DetailsHomePage\n                    href={personInfo.homepage}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {personInfo.homepage}\n                  </DetailsHomePage>\n                </DetailsDescr>\n              )}\n\n              <BtnContainer>\n                <StyledLinkBtn to=\"biography\" state={personInfo.biography}>\n                  {t('buttons.biography')}\n                </StyledLinkBtn>\n                <StyledLinkBtn to=\"movies\">{t('buttons.movies')}</StyledLinkBtn>\n                <StyledLinkBtn to=\"images\">{t('buttons.photo')}</StyledLinkBtn>\n                <StyledBtn onClick={handleSaveToAlbum} saved={saved}>\n                  {saved ? t('buttons.saved') : t('buttons.save')}\n                </StyledBtn>\n              </BtnContainer>\n            </Box>\n          </MainInfo>\n\n          <Suspense\n            fallback={\n              <Box display=\"flex\" justifyContent=\"center\">\n                <ThreeCircles\n                  height=\"100\"\n                  width=\"100\"\n                  color=\"#bcc3ce\"\n                  ariaLabel=\"Three-Circles-rotating\"\n                  visible={true}\n                />\n              </Box>\n            }\n          >\n            <Outlet />\n          </Suspense>\n\n          {showModal && (\n            <Modal onClose={toggleModal}>\n              <img\n                width=\"100%\"\n                src={\n                  personInfo.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${personInfo.profile_path}`\n                    : imageplaceholder\n                }\n                alt={personInfo.name}\n              />\n            </Modal>\n          )}\n        </>\n      )}\n    </PageWrap>\n  );\n}\n","import { Box } from 'components/Box/Box';\nimport {errorImage }from 'images';\nimport { useEffect } from 'react';\nimport { t } from 'i18next';\n\nexport default function PageError() {\n  useEffect(() => {\n    document.title = `My Movies | ${t('title.error')}`;\n  });\n\n  return (\n    <Box maxWidth=\"800px\" mx=\"auto\" mt={6}>\n      <img src={errorImage} alt=\"error 404\" width=\"100%\" />\n    </Box>\n  );\n}\n","import axios from 'axios';\n\nconst MAIN_URL = process.env.REACT_APP_MAIN_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst fetchTrends = async (lang: string, page: number, abortSignal: AbortSignal) => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=${page}`, {signal: abortSignal});\n  return response.data;\n};\n\nconst fetchMovies = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchLibraryMovies = async (array: any[], lang: string) => {\n  const arrayOfMovies = array.map(async movie_id => {\n    return await axios\n      .get(`${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfMovies);\n  return response;\n};\n\nconst fetchActors = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/person?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchActorById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchAlbumActors = async (array: any[], lang: string) => {\n  const arrayOfActors = array.map(async actor_id => {\n    return await axios\n      .get(`${MAIN_URL}/person/${actor_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfActors);\n  return response;\n};\n\nconst fetchMoviesByActor = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/movie_credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchImagesByActor = async (id: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovieTrailer,\n  fetchLibraryMovies,\n  fetchActors,\n  fetchActorById,\n  fetchAlbumActors,\n  fetchMoviesByActor,\n  fetchImagesByActor,\n};\n"],"names":["DetailsName","styled","p","theme","space","fontSizes","l","colors","textTitle","DetailsImg","DetailsDescr","textPrimary","Bold","bold","DetailsHomePage","accent","Overlay","ModalWindow","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleEscape","removeEventListener","event","code","createPortal","onClick","currentTarget","target","formatDateEn","date","format","Date","parse","formatDateUa","locale","uk","ActorDetails","actors","toggleActorsInAlbum","useState","personInfo","setPersonInfo","error","setError","location","useLocation","params","useParams","includes","actorId","saved","setSaved","backLink","useRef","state","from","showModal","setShowModal","lang","t","toggleModal","fetchActorById","then","data","title","name","catch","to","current","pathname","PageError","width","src","profile_path","imageplaceholder","alt","Box","birthday","deathday","homepage","href","rel","biography","Suspense","fallback","display","justifyContent","height","color","ariaLabel","visible","maxWidth","mx","mt","errorImage","MAIN_URL","process","API_KEY","fetchTrends","page","abortSignal","axios","signal","response","fetchMovies","query","fetchMovieById","id","fetchCastById","fetchReviewsById","fetchMovieTrailer","fetchLibraryMovies","array","arrayOfMovies","map","movie_id","console","log","Promise","all","fetchActors","fetchAlbumActors","arrayOfActors","actor_id","fetchMoviesByActor","fetchImagesByActor"],"sourceRoot":""}