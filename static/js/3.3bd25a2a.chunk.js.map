{"version":3,"file":"static/js/3.3bd25a2a.chunk.js","mappings":"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","sources":["components/ActorCard/ActorCard.styled.tsx","components/ActorCard/ActorCard.tsx","components/Background/Background.tsx","components/BaseComps/BaseComps.tsx","components/Pagination/Pagination.tsx","components/SearchComps/SearchComps.tsx","pages/Actors.tsx","services/api.ts"],"sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const ActorThumb = styled.div`\n  position: relative;\n  width: 200px;\n  height: 300px;\n  overflow: hidden;\n`;\n\nexport const ActorImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const ActorTitle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  padding-bottom: ${(p: { theme: { space: number[]; }; }) => p.theme.space[2]}px;\n  background-color:  ${(p: { theme: { colors: { bcgTitle: string; }; }; }) => p.theme.colors.bcgTitle};\n  color:  ${(p: { theme: { colors: { textSecondary: string; }; }; }) => p.theme.colors.textSecondary};\n  font-size: 18px;\n  font-weight: 700;\n  text-align: center;\n\n  transform: translateY(100%);\n  transition: transform 250ms ease;\n\n  ${ActorThumb}:hover &,\n  ${ActorThumb}:focus & {\n    transform: translateY(0);\n  }\n`;\n\nexport const Character = styled.p`\n  font-style: italic;\n  font-weight: 400;\n`;\n","import {\n  ActorThumb,\n  ActorImg,\n  ActorTitle,\n  Character,\n} from 'components/ActorCard/ActorCard.styled';\nimport { nophoto } from 'images';\nimport { IActor } from 'components/types';\nimport { FC } from 'react';\n\ntype ActorProps = {\n  actor: IActor;\n};\n\nexport const ActorCard: FC<ActorProps> = ({ actor }) => (\n  <ActorThumb>\n    <ActorImg\n      width=\"200\"\n      src={actor.profile_path\n        ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n        : nophoto}\n      alt={actor.name} />\n    <ActorTitle>\n      <p>{actor.name}</p>\n      {actor.character && <Character>{actor.character}</Character>}\n    </ActorTitle>\n  </ActorThumb>\n);\n","import styled from '@emotion/styled';\nimport {bcgMovies, bcgActors} from 'images';\n\nexport const BcgMovies = styled.div`\n  margin: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px auto 0;\n  max-width: 1280px;\n  height: 720px;\n  background-image: radial-gradient(\n      at center,\n      rgba(59, 67, 81, 0.2),\n      ${(p: { theme: { colors: { bcgMain: string; }; }; }) => p.theme.colors.bcgMain} 70%\n    ),\n    url(${bcgMovies});\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n`;\n\nexport const BcgActors = styled.div`\n  margin: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px auto 0;\n  max-width: 1280px;\n  height: 720px;\n  background-image: radial-gradient(\n      at center,\n      rgba(59, 67, 81, 0.2),\n      ${(p: { theme: { colors: { bcgMain: string; }; }; }) => p.theme.colors.bcgMain} 70%\n    ),\n    url(${bcgActors});\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n`;\n","import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h2`\n  color: ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px;\n  gap: ${(p: { theme: { space: number[]; }; }) => p.theme.space[3]}px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  box-shadow: none;\n  cursor: pointer;\n\n  transition: box-shadow 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${(p: { theme: { shadows: { blackShadow: string; }; }; }) => p.theme.shadows.blackShadow};\n  }\n`;\n","import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const PaginationStyled = styled(ReactPaginate)`\n  display: flex;\n  list-style: none;\n  justify-content: center;\n  margin-top: 16px;\n  font-size: ${(p: { theme: { fontSizes: { s: string; }; }; }) => p.theme.fontSizes.s};\n  font-weight: 700;\n\n  @media (max-width: 479.98px) {\n    flex-wrap: wrap;\n  }\n\n  & li {\n    color: ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n\n    transition: color 250ms linear;\n\n    :hover:not(.disabled) {\n      color: ${(p: { theme: { colors: { accent: string; }; }; }) => p.theme.colors.accent};\n    }\n  }\n\n  & .activePage {\n    color: ${(p: { theme: { colors: { accent: string; }; }; }) => p.theme.colors.accent};\n  }\n\n  & a {\n    padding: 0 8px;\n    cursor: pointer;\n  }\n\n  & a.disabled {\n    cursor: default;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  margin: 0 auto;\n  max-width: 400px;\n`;\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  padding: 4px 8px;\n\n  &:hover + button {\n    color: ${(p: { theme: { colors: { bcgBtn: string; }; }; }) => p.theme.colors.bcgBtn};\n  }\n`;\n","import { BcgActors } from 'components/Background/Background';\nimport { List, Item } from 'components/BaseComps/BaseComps';\nimport { SearchForm, SearchInput } from 'components/SearchComps/SearchComps';\nimport { SearchBtn, ClearBtn } from 'components/Buttons/Buttons';\nimport { PaginationStyled } from 'components/Pagination/Pagination';\nimport { ActorCard } from 'components/ActorCard/ActorCard';\nimport 'index.css';\nimport { NavLink } from 'react-router-dom';\nimport { PageWrap, Box } from 'components/Box/Box';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchActors } from 'services/api';\nimport { IoIosCloseCircle } from 'react-icons/io';\nimport toast from 'react-hot-toast';\nimport { t } from 'i18next';\nimport { IActor } from 'components/types';\n\nexport default function Actors() {\n  const [actorsFound, setActorsFound] = useState<Array<IActor>>([]);\n  const [searchQuery, setSearchQuery] = useSearchParams() as any;\n  const query = searchQuery.get('search');\n  const currentPage = Number(searchQuery.get('page'))\n    ? Number(searchQuery.get('page'))\n    : 1;\n  const [input, setInput] = useState(query ?? '');\n  const location = useLocation();\n  const [totalPages, setTotalPages] = useState(1);\n  const lang = t('lang');\n  const actorName = t('placeholders.name')\n\n  useEffect(() => {\n    document.title = `My Movies | ${t('nav.actors')}`;\n\n    if (!query) {\n      return;\n    }\n\n    fetchActors(query, currentPage, lang)\n      .then(data => {\n        if (!data.results.length) {\n          return toast.error(t('noResults'));\n        } else {\n          setTotalPages(data.total_pages);\n          setActorsFound([...data.results]);\n        }\n      })\n      .catch(error => console.log(error));\n  }, [lang, currentPage, query]);\n\n  const onSearchInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!input.trim()) {\n      return toast.error(t('emptyQuery'));\n    }\n    if (input.trim() !== query) {\n      setActorsFound([]);\n      setSearchQuery({ search: input.trim(), page: 1 });\n    }\n  };\n\n  const clearAll = () => {\n    setInput('');\n    setActorsFound([]);\n    setSearchQuery({ search: '', page: 0 });\n    setTotalPages(0);\n  };\n\n  const handlePageClick = (e: { selected: number; }) => {\n    setSearchQuery({ search: input, page: e.selected + 1 });\n  };\n\n  return (\n    <PageWrap>\n      <SearchForm onSubmit={handleSubmit}>\n        <Box position=\"relative\" flexGrow=\"1\">\n          <SearchInput\n            type=\"text\"\n            value={input}\n            onChange={onSearchInput}\n            placeholder={actorName}\n          />\n          <ClearBtn type=\"button\" onClick={clearAll}>\n            <IoIosCloseCircle size=\"20\" />\n          </ClearBtn>\n        </Box>\n        <SearchBtn type=\"submit\">{t('buttons.search')}</SearchBtn>\n      </SearchForm>\n\n      {!actorsFound.length && <BcgActors />}\n\n      <List>\n        {actorsFound.map(actor => (\n          <Item key={actor.id}>\n            <NavLink to={`${actor.id}`} state={{ from: location }}>\n              <ActorCard actor={actor} />\n            </NavLink>\n          </Item>\n        ))}\n      </List>\n\n      {totalPages > 1 && (\n        <PaginationStyled\n          breakLabel=\"...\"\n          nextLabel=\">\"\n          onPageChange={handlePageClick}\n          pageRangeDisplayed={5}\n          pageCount={totalPages}\n          previousLabel=\"<\"\n          disabledLinkClassName=\"disabled\"\n          activeClassName=\"activePage\"\n          forcePage={currentPage - 1}\n        />\n      )}\n    </PageWrap>\n  );\n}\n","import axios from 'axios';\n\nconst MAIN_URL = process.env.REACT_APP_MAIN_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst fetchTrends = async (lang: string, page: number, abortSignal: AbortSignal) => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=${page}`, {signal: abortSignal});\n  return response.data;\n};\n\nconst fetchMovies = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchLibraryMovies = async (array: any[], lang: string) => {\n  const arrayOfMovies = array.map(async movie_id => {\n    return await axios\n      .get(`${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfMovies);\n  return response;\n};\n\nconst fetchActors = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/person?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchActorById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchAlbumActors = async (array: any[], lang: string) => {\n  const arrayOfActors = array.map(async actor_id => {\n    return await axios\n      .get(`${MAIN_URL}/person/${actor_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfActors);\n  return response;\n};\n\nconst fetchMoviesByActor = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/movie_credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchImagesByActor = async (id: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovieTrailer,\n  fetchLibraryMovies,\n  fetchActors,\n  fetchActorById,\n  fetchAlbumActors,\n  fetchMoviesByActor,\n  fetchImagesByActor,\n};\n"],"names":["ActorThumb","ActorImg","ActorTitle","p","theme","space","colors","bcgTitle","textSecondary","Character","ActorCard","actor","width","src","profile_path","nophoto","alt","name","character","BcgMovies","styled","bcgMain","bcgMovies","BcgActors","bcgActors","PageTitle","textPrimary","List","Item","shadows","blackShadow","PaginationStyled","ReactPaginate","fontSizes","s","accent","SearchForm","SearchInput","bcgBtn","Actors","useState","actorsFound","setActorsFound","useSearchParams","searchQuery","setSearchQuery","query","get","currentPage","Number","input","setInput","location","useLocation","totalPages","setTotalPages","lang","t","actorName","useEffect","document","title","fetchActors","then","data","results","length","toast","total_pages","catch","error","console","log","onSubmit","event","preventDefault","trim","search","page","position","flexGrow","type","value","onChange","target","placeholder","onClick","size","map","to","id","state","from","breakLabel","nextLabel","onPageChange","e","selected","pageRangeDisplayed","pageCount","previousLabel","disabledLinkClassName","activeClassName","forcePage","MAIN_URL","process","API_KEY","fetchTrends","abortSignal","axios","signal","response","fetchMovies","fetchMovieById","fetchCastById","fetchReviewsById","fetchMovieTrailer","fetchLibraryMovies","array","arrayOfMovies","movie_id","Promise","all","fetchActorById","fetchAlbumActors","arrayOfActors","actor_id","fetchMoviesByActor","fetchImagesByActor"],"sourceRoot":""}