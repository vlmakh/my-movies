{"version":3,"file":"static/js/393.6a1fcc00.chunk.js","mappings":"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","sources":["components/BaseComps/BaseComps.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h2`\n  color: ${p => p.theme.colors.textPrimary};\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: ${p => p.theme.space[4]}px;\n  gap: ${p => p.theme.space[3]}px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  box-shadow: none;\n  cursor: pointer;\n\n  transition: box-shadow 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${p => p.theme.shadows.blackShadow};\n  }\n`;\n","import styled from \"@emotion/styled/macro\";\n\nexport const MovieThumb = styled.div`\n  position: relative;\n  width: 200px;\n  height: 300px;\n  overflow: hidden;\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  background-color:  ${p => p.theme.colors.bcgTitle};\n  color:  ${p => p.theme.colors.textSecondary};\n  font-size: 18px;\n  font-weight: 700;\n  text-align: center;\n\n  transform: translateY(100%);\n  transition: transform 250ms ease;\n\n  ${MovieThumb}:hover &,\n  ${MovieThumb}:focus & {\n    transform: translateY(0);\n  }\n`;\n\nexport const MovieYear = styled.p`\n  font-style: italic;\n  font-weight: 400;\n`\n","import {\n  MovieThumb,\n  MovieImg,\n  MovieTitle,\n  MovieYear,\n} from 'components/MovieCard/MovieCard.styled';\nimport imageplaceholder from 'images/noposter.jpg';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({ movie }) => {\n  let movieYear = '';\n  if (movie.release_date ?? movie.first_air_date) {\n    movieYear = (movie.release_date ?? movie.first_air_date).slice(0, 4);\n  }\n\n  return (\n    <MovieThumb>\n      <MovieImg\n        width=\"200\"\n        src={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n            : imageplaceholder\n        }\n        alt={movie.original_title ?? movie.name}\n        loading=\"lazy\"\n      />\n      <MovieTitle>\n        <p>{movie.title ?? movie.name}</p>\n        <MovieYear>{movieYear}</MovieYear>\n      </MovieTitle>\n    </MovieThumb>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst MAIN_URL = process.env.REACT_APP_MAIN_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst fetchTrends = async (lang, page) => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=${page}`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, page, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchLibraryMovies = async (array, lang) => {\n  const arrayOfMovies = array.map(async movie_id => {\n    return await axios\n      .get(`${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfMovies);\n  return response;\n};\n\nconst fetchActors = async (query, page, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/person?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchActorById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchAlbumActors = async (array, lang) => {\n  const arrayOfActors = array.map(async actor_id => {\n    return await axios\n      .get(`${MAIN_URL}/person/${actor_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfActors);\n  return response;\n};\n\nconst fetchMoviesByActor = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/movie_credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchImagesByActor = async id => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovieTrailer,\n  fetchLibraryMovies,\n  fetchActors,\n  fetchActorById,\n  fetchAlbumActors,\n  fetchMoviesByActor,\n  fetchImagesByActor,\n};\n\nfetchMovies.propTypes = {\n  query: PropTypes.string,\n  page: PropTypes.number,\n};\n\nfetchMovieById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchCastById.propTypes = {\n  id: PropTypes.string,\n};\n\nfetchReviewsById.propTypes = {\n  id: PropTypes.string,\n};\n"],"names":["PageTitle","styled","p","theme","colors","textPrimary","List","space","Item","shadows","blackShadow","MovieThumb","MovieImg","MovieTitle","bcgTitle","textSecondary","MovieYear","MovieCard","movie","movieYear","release_date","first_air_date","slice","width","src","poster_path","imageplaceholder","alt","original_title","name","loading","title","MAIN_URL","process","REACT_APP_MAIN_URL","API_KEY","REACT_APP_API_KEY","fetchTrends","lang","page","axios","response","data","fetchMovies","query","fetchMovieById","id","fetchCastById","fetchReviewsById","fetchMovieTrailer","fetchLibraryMovies","array","arrayOfMovies","map","movie_id","then","catch","error","console","log","Promise","all","fetchActors","fetchActorById","fetchAlbumActors","arrayOfActors","actor_id","fetchMoviesByActor","fetchImagesByActor","propTypes","PropTypes"],"sourceRoot":""}