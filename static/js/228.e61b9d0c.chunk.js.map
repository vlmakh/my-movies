{"version":3,"file":"static/js/228.e61b9d0c.chunk.js","mappings":"iRAEaA,EAAcC,EAAAA,EAAAA,GAAH,uGACR,SAACC,GAAD,OAAyCA,EAAEC,MAAMC,MAAM,EAAvD,IACD,SAACF,GAAD,OAAmDA,EAAEC,MAAME,UAAUC,CAArE,IACJ,SAACJ,GAAD,OAAwDA,EAAEC,MAAMI,OAAOC,SAAvE,IAIEC,EAAaR,EAAAA,EAAAA,IAAH,mGAOVS,EAAeT,EAAAA,EAAAA,EAAH,mIACT,SAACC,GAAD,OAAyCA,EAAEC,MAAMC,MAAM,EAAvD,IACL,SAACF,GAAD,OAA0DA,EAAEC,MAAMI,OAAOI,WAAzE,IAQEC,EAAOX,EAAAA,EAAAA,KAAH,6CACA,SAACC,GAAD,OAAuBA,EAAEW,KAAO,MAAQ,KAAxC,IAGJC,EAAkBb,EAAAA,EAAAA,EAAH,2KACZ,SAACC,GAAD,OAAyCA,EAAEC,MAAMC,MAAM,EAAvD,IACL,SAACF,GAAD,OAA0DA,EAAEC,MAAMI,OAAOI,WAAzE,IAOE,SAACT,GAAD,OAAqDA,EAAEC,MAAMI,OAAOQ,MAApE,G,4FCrCAC,EAAUf,EAAAA,EAAAA,IAAH,uOAaPgB,EAAchB,EAAAA,EAAAA,IAAH,kL,mBCTlBiB,EAAYC,SAASC,cAAc,eAE1B,SAASC,EAAT,GAAqD,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,UACvCC,EAAAA,EAAAA,YAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWC,GAE5B,WACLF,OAAOG,oBAAoB,UAAWD,EACvC,CACF,IAED,IAAMA,EAAe,SAACE,GACD,WAAfA,EAAMC,MACRR,GAEH,EAQD,OAAOS,EAAAA,EAAAA,eACL,SAACf,EAAD,CAASgB,QAPY,SAACH,GAClBA,EAAMI,gBAAkBJ,EAAMK,QAChCZ,GAEH,EAGC,UACE,SAACL,EAAD,UAAcM,MAEhBL,EAEH,C,+LCnCYiB,EAAkB,SAACC,GAC9B,GAAIA,EAAM,CACR,IAAMC,EAAQC,KAAKC,MAAMH,EAAO,IAC1BI,EAAMJ,EAAO,GAEnB,OADeC,EAAQ,EAAR,UAAeA,EAAf,aAAyBG,EAAzB,eAAqCA,EAArC,IAEhB,CACF,EAEYC,EAAkB,SAACL,GAC9B,GAAIA,EAAM,CACR,IAAMC,EAAQC,KAAKC,MAAMH,EAAO,IAC1BI,EAAMJ,EAAO,GAEnB,OADeC,EAAQ,EAAR,UAAeA,EAAf,kBAAyBG,EAAzB,0BAAsCA,EAAtC,eAEhB,CACF,E,kBCec,SAASE,EAAT,GAA2E,IAAD,MAAlDC,EAAkD,EAAlDA,qBAAsBC,EAA4B,EAA5BA,OAC3D,GAAkCC,EAAAA,EAAAA,UAAwB,MAA1D,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,QAAM,oBAACL,EAASM,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAChD,GAA0BZ,EAAAA,EAAAA,YACxBD,EAAOc,SAASN,EAAOO,UADzB,eAAOC,EAAP,KAAcC,EAAd,KAGA,GAAkChB,EAAAA,EAAAA,WAAS,GAA3C,eAAOiB,EAAP,KAAkBC,EAAlB,KACMC,GAAOC,EAAAA,EAAAA,GAAE,QAETC,EAAc,WAClBH,GAAcD,EACf,EAsBD,OAXAtC,EAAAA,EAAAA,YAAU,YACR2C,EAAAA,EAAAA,IAAef,EAAOO,QAASK,GAC5BI,MAAK,SAAAC,GACJtB,EAAasB,GACblD,SAASmD,MAAT,sBAAgCD,EAAKC,MACtC,IACAC,OAAM,SAAAvB,GACLC,GAAS,EACV,GACJ,GAAE,CAACe,EAAMZ,EAAOO,WAGf,SAAC,KAAD,CAAUa,SAAQ,OAAE1B,QAAF,IAAEA,OAAF,EAAEA,EAAW2B,cAA/B,UACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAaC,GAAIpB,EAASqB,QAA1B,SACIrB,EAASqB,QAAQC,UAA+BX,EAAAA,EAAAA,GAAE,iBAAtBA,EAAAA,EAAAA,GAAE,kBAGjCjB,IAAS,SAAC6B,EAAA,QAAD,IAET/B,IACC,iCACE,SAAC,KAAD,UAAcA,EAAUwB,SACxB,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEQ,MAAM,MACNC,IACEjC,EAAUkC,YAAV,0CACuClC,EAAUkC,aAC7CC,EAENC,IAAG,UAAKpC,EAAUwB,OAClBtC,QAASkC,OAIb,UAACiB,EAAA,GAAD,YACE,SAAC,KAAD,WACG,UAACrC,EAAUsC,oBAAX,QAA2BtC,EAAUuC,gBAAgBC,MACpD,EACA,MAIJ,SAAC,KAAD,UACGxC,EAAUyC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QAGjD7C,EAAU8C,QAAU,IACnB,SAAC,KAAD,UACG,UAAS,UAAT5B,EACMvB,EAAgBK,EAAU8C,SAC1BzD,EAAgBW,EAAU8C,YAIpC9C,EAAU+C,aAAe,IACxB,UAAC,KAAD,YACE,SAAC,MAAD,IAAe,KACf,SAAC,KAAD,CAAMhF,KAAMiC,EAAU+C,aAAe,EAArC,SACG/C,EAAU+C,aAAaC,QAAQ,KAHpC,UASF,UAAC,KAAD,YACE,SAAC,KAAD,CAAepB,GAAG,WAAWlB,MAAOV,EAAUiD,SAA9C,UACG9B,EAAAA,EAAAA,GAAE,uBAEL,SAAC,KAAD,CAAeS,GAAG,OAAlB,UAA0BT,EAAAA,EAAAA,GAAE,mBAC5B,SAAC,KAAD,CAAeS,GAAG,UAAlB,UACGT,EAAAA,EAAAA,GAAE,sBAEL,SAAC,KAAD,CAAeS,GAAG,UAAlB,UACGT,EAAAA,EAAAA,GAAE,sBAEL,SAAC,IAAD,CAAWjC,QAnFD,WACtBW,EAAqBS,EAAOO,SAJ5BE,GAAUD,EAMX,EAgFkDA,MAAOA,EAA5C,SACGA,GAAQK,EAAAA,EAAAA,GAAE,kBAAmBA,EAAAA,EAAAA,GAAE,4BAMxC,SAAC,EAAA+B,SAAD,CACEC,UACE,SAACd,EAAA,GAAD,CAAKe,QAAQ,OAAOC,eAAe,SAAnC,UACE,SAAC,KAAD,CACEC,OAAO,MACPtB,MAAM,MACNuB,MAAM,UACNC,UAAU,yBACVC,SAAS,MARjB,UAaE,SAAC,KAAD,MAGDzC,IACC,SAACzC,EAAA,EAAD,CAAOC,QAAS4C,EAAhB,UACE,gBACEY,MAAM,OACNC,IACEjC,EAAUkC,YAAV,0CACuClC,EAAUkC,aAC7CC,EAENC,IAAG,UAAKpC,EAAU0D,2BASjC,C,yHC1Kc,SAAS3B,IAKtB,OAJArD,EAAAA,EAAAA,YAAU,WACRL,SAASmD,MAAT,uBAAgCL,EAAAA,EAAAA,GAAE,eACnC,KAGC,SAAC,KAAD,CAAKwC,SAAS,QAAQC,GAAG,OAAOC,GAAI,EAApC,UACE,gBAAK5B,IAAK6B,EAAAA,GAAY1B,IAAI,YAAYJ,MAAM,UAGjD,C,0WCbK+B,EAAWC,+BACXC,EAAUD,mCAEVE,EAAW,mCAAG,WAAOhD,EAAciD,EAAcC,GAAnC,uFACKC,EAAAA,GAAAA,IAAA,UAClBN,EADkB,qCACmBE,EADnB,qBACuC/C,EADvC,iBACoDiD,GAAQ,CAACG,OAAQF,IAF1E,cACZG,EADY,yBAGXA,EAAShD,MAHE,2CAAH,0DAMXiD,EAAW,mCAAG,WAAOC,EAAeN,EAAcjD,GAApC,uFACKmD,EAAAA,GAAAA,IAAA,UAClBN,EADkB,iCACeE,EADf,kBACgCQ,EADhC,qBACkDvD,EADlD,iBAC+DiD,EAD/D,yBADL,cACZI,EADY,yBAIXA,EAAShD,MAJE,2CAAH,0DAOXF,EAAc,mCAAG,WAAOqD,EAAYxD,GAAnB,uFACEmD,EAAAA,GAAAA,IAAA,UAClBN,EADkB,kBACAW,EADA,oBACcT,EADd,qBACkC/C,IAFpC,cACfqD,EADe,yBAIdA,EAAShD,MAJK,2CAAH,wDAOdoD,EAAa,mCAAG,WAAOD,EAAYxD,GAAnB,uFACGmD,EAAAA,GAAAA,IAAA,UAClBN,EADkB,kBACAW,EADA,4BACsBT,EADtB,qBAC0C/C,IAF7C,cACdqD,EADc,yBAIbA,EAAShD,MAJI,2CAAH,wDAObqD,EAAgB,mCAAG,WAAOF,EAAYxD,GAAnB,uFACAmD,EAAAA,GAAAA,IAAA,UAClBN,EADkB,kBACAW,EADA,4BACsBT,EADtB,qBAC0C/C,EAD1C,YADA,cACjBqD,EADiB,yBAIhBA,EAAShD,MAJO,2CAAH,wDAOhBsD,EAAiB,mCAAG,WAAOH,EAAYxD,GAAnB,uFACDmD,EAAAA,GAAAA,IAAA,UAClBN,EADkB,kBACAW,EADA,2BACqBT,EADrB,qBACyC/C,IAFxC,cAClBqD,EADkB,yBAIjBA,EAAShD,MAJQ,2CAAH,wDAOjBuD,EAAkB,mCAAG,WAAOC,EAAc7D,GAArB,gFACnB8D,EAAgBD,EAAMrC,IAAN,mCAAU,WAAMuC,GAAN,iFACjBZ,EAAAA,GAAAA,IAAA,UACHN,EADG,kBACekB,EADf,oBACmChB,EADnC,qBACuD/C,IACjEI,MAAK,SAAAiD,GACJ,OAAOA,EAAShD,IACjB,IACAE,OAAM,SAAAvB,GAAK,OAAIgF,QAAQC,IAAIjF,EAAhB,IANgB,mFAAV,uDADG,SAUFkF,QAAQC,IAAIL,GAVV,cAUnBT,EAVmB,yBAWlBA,GAXkB,2CAAH,wDAclBe,EAAW,mCAAG,WAAOb,EAAeN,EAAcjD,GAApC,uFACKmD,EAAAA,GAAAA,IAAA,UAClBN,EADkB,kCACgBE,EADhB,kBACiCQ,EADjC,qBACmDvD,EADnD,iBACgEiD,EADhE,yBADL,cACZI,EADY,yBAIXA,EAAShD,MAJE,2CAAH,0DAOXgE,EAAc,mCAAG,WAAOb,EAAYxD,GAAnB,uFACEmD,EAAAA,GAAAA,IAAA,UAClBN,EADkB,mBACCW,EADD,oBACeT,EADf,qBACmC/C,IAFrC,cACfqD,EADe,yBAIdA,EAAShD,MAJK,2CAAH,wDAOdiE,EAAgB,mCAAG,WAAOT,EAAc7D,GAArB,gFACjBuE,EAAgBV,EAAMrC,IAAN,mCAAU,WAAMgD,GAAN,iFACjBrB,EAAAA,GAAAA,IAAA,UACHN,EADG,mBACgB2B,EADhB,oBACoCzB,EADpC,qBACwD/C,IAClEI,MAAK,SAAAiD,GACJ,OAAOA,EAAShD,IACjB,IACAE,OAAM,SAAAvB,GAAK,OAAIgF,QAAQC,IAAIjF,EAAhB,IANgB,mFAAV,uDADC,SAUAkF,QAAQC,IAAII,GAVZ,cAUjBlB,EAViB,yBAWhBA,GAXgB,2CAAH,wDAchBoB,EAAkB,mCAAG,WAAOjB,EAAYxD,GAAnB,uFACFmD,EAAAA,GAAAA,IAAA,UAClBN,EADkB,mBACCW,EADD,kCAC6BT,EAD7B,qBACiD/C,IAF/C,cACnBqD,EADmB,yBAIlBA,EAAShD,MAJS,2CAAH,wDAOlBqE,EAAkB,mCAAG,WAAOlB,GAAP,uFACFL,EAAAA,GAAAA,IAAA,UAClBN,EADkB,mBACCW,EADD,2BACsBT,IAFpB,cACnBM,EADmB,yBAIlBA,EAAShD,MAJS,2CAAH,qD","sources":["components/DetailsComps/DetailsComps.tsx","components/Modal/Modal.styled.tsx","components/Modal/Modal.tsx","services/formatRuntime.ts","pages/MovieDetails.tsx","pages/PageError.tsx","services/api.ts"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const DetailsName = styled.h1`\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px;\n  font-size: ${(p: { theme: { fontSizes: { l: string; }; }; }) => p.theme.fontSizes.l};\n  color: ${(p: { theme: { colors: { textTitle: string; }; }; }) => p.theme.colors.textTitle};\n  text-align: center;\n`;\n\nexport const DetailsImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  cursor: pointer;\n`;\n\nexport const DetailsDescr = styled.p`\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px;\n  color: ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n  \n\n  @media (max-width: 479.98px) {\n    text-align: center;\n  }\n`;\n\nexport const Bold = styled.span`\n  font-weight: ${(p: {bold: string}) => p.bold ? '700' : '400'};\n`;\n\nexport const DetailsHomePage = styled.a`\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px;\n  color: ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n  text-decoration: none;\n\n  transition: color 250ms linear;\n\n  :hover,\n  :focus {\n    color: ${(p: { theme: { colors: { accent: string; }; }; }) => p.theme.colors.accent};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  width: 500px;\n  max-height: calc(100vh - 24px);\n  overflow-y: clip;\n  overflow-x: visible;  \n\n @media (max-width: 480px) {\n    width: 100%;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Overlay, ModalWindow } from './Modal.styled';\nimport { createPortal } from 'react-dom';\nimport { IPortalProps } from 'components/types';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLDivElement;\n\nexport default function Modal({ onClose, children }: IPortalProps) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = (event: { code: string; }) => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdrop = (event: { currentTarget: any; target: any; }) => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdrop}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n","export const formatRuntimeEn = (time: number) => {\n  if (time) {\n    const hours = Math.floor(time / 60);\n    const min = time % 60;\n    const result = hours > 0 ? `${hours}h ${min}m` : `${min}m`;\n    return result;\n  }\n};\n\nexport const formatRuntimeUa = (time: number) => {\n  if (time) {\n    const hours = Math.floor(time / 60);\n    const min = time % 60;\n    const result = hours > 0 ? `${hours}г ${min}хв` : `${min}хв`;\n    return result;\n  }\n};\n","import {\n  DetailsDescr,\n  DetailsImg,\n  DetailsName,\n  Bold,\n} from 'components/DetailsComps/DetailsComps';\nimport {\n  StyledBtn,\n  StyledLinkBtn,\n  BackLinkBtn,\n} from 'components/Buttons/Buttons';\nimport {\n  PageWrap,\n  Box,\n  MainInfo,\n  BtnContainer,\n  ImgThumb, BackDrop,\n} from 'components/Box/Box';\nimport { useState, useEffect, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieById } from 'services/api';\nimport PageError from 'pages/PageError';\nimport Modal from 'components/Modal/Modal';\nimport imageplaceholder from 'images/noposter.jpg';\nimport { Suspense } from 'react';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { t } from 'i18next';\nimport { formatRuntimeEn, formatRuntimeUa } from 'services/formatRuntime';\nimport { ImStarHalf } from 'react-icons/im';\nimport { MovieDetailsType, IMovie } from 'components/types';\n\nexport default function MovieDetails({ toggleMovieInLibrary, movies }: MovieDetailsType) {\n  const [movieItem, setMovieItem] = useState<IMovie | null>(null);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const params = useParams() as any;\n  const backLink = useRef(location.state?.from ?? '/');\n  const [saved, setSaved] = useState(\n    movies.includes(params.movieId) ? true : false\n  );\n  const [showModal, setShowModal] = useState(false);\n  const lang = t('lang');\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const toggleSaveBtn = () => {\n    setSaved(!saved);\n  };\n\n  const handleSaveToLib = () => {\n    toggleMovieInLibrary(params.movieId);\n    toggleSaveBtn();\n  };\n\n  useEffect(() => {\n    fetchMovieById(params.movieId, lang)\n      .then(data => {\n        setMovieItem(data);\n        document.title = `My Movies | ${data.title}`;\n      })\n      .catch(error => {\n        setError(true);\n      });\n  }, [lang, params.movieId]);\n\n  return (\n    <BackDrop backdrop={movieItem?.backdrop_path}>\n    <PageWrap>\n      <BackLinkBtn to={backLink.current}>\n        {!backLink.current.pathname ? t('buttons.home') : t('buttons.back')}\n      </BackLinkBtn>\n\n      {error && <PageError />}\n\n      {movieItem && (\n        <>\n          <DetailsName>{movieItem.title}</DetailsName>\n          <MainInfo>\n            <ImgThumb>\n              <DetailsImg\n                width=\"200\"\n                src={\n                  movieItem.poster_path\n                    ? `https://image.tmdb.org/t/p/w200/${movieItem.poster_path}`\n                    : imageplaceholder\n                }\n                alt={`${movieItem.title}`}\n                onClick={toggleModal}\n              />\n            </ImgThumb>\n\n            <Box>\n              <DetailsDescr>\n                {(movieItem.release_date ?? movieItem.first_air_date).slice(\n                  0,\n                  4\n                )}\n              </DetailsDescr>\n\n              <DetailsDescr>\n                {movieItem.genres.map(genre => genre.name).join(', ')}\n              </DetailsDescr>\n\n              {movieItem.runtime > 0 && (\n                <DetailsDescr>\n                  {lang === 'uk-UA'\n                    ? `${formatRuntimeUa(movieItem.runtime)}`\n                    : `${formatRuntimeEn(movieItem.runtime)}`}\n                </DetailsDescr>\n              )}\n\n              {movieItem.vote_average > 0 && (\n                <DetailsDescr>\n                  <ImStarHalf />{' '}\n                  <Bold bold={movieItem.vote_average > 7}>\n                    {movieItem.vote_average.toFixed(1)}\n                  </Bold>\n                  /10\n                </DetailsDescr>\n              )}\n\n              <BtnContainer>\n                <StyledLinkBtn to=\"overview\" state={movieItem.overview}>\n                  {t('buttons.overview')}\n                </StyledLinkBtn>\n                <StyledLinkBtn to=\"cast\">{t('buttons.cast')}</StyledLinkBtn>\n                <StyledLinkBtn to=\"reviews\">\n                  {t('buttons.reviews')}\n                </StyledLinkBtn>\n                <StyledLinkBtn to=\"trailer\">\n                  {t('buttons.trailer')}\n                </StyledLinkBtn>\n                <StyledBtn onClick={handleSaveToLib} saved={saved}>\n                  {saved ? t('buttons.saved') : t('buttons.save')}\n                </StyledBtn>\n              </BtnContainer>\n            </Box>\n          </MainInfo>\n\n          <Suspense\n            fallback={\n              <Box display=\"flex\" justifyContent=\"center\">\n                <ThreeCircles\n                  height=\"100\"\n                  width=\"100\"\n                  color=\"#bcc3ce\"\n                  ariaLabel=\"Three-Circles-rotating\"\n                  visible={true}\n                />\n              </Box>\n            }\n          >\n            <Outlet />\n          </Suspense>\n\n          {showModal && (\n            <Modal onClose={toggleModal}>\n              <img\n                width=\"100%\"\n                src={\n                  movieItem.poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${movieItem.poster_path}`\n                    : imageplaceholder\n                }\n                alt={`${movieItem.original_title}`}\n              />\n            </Modal>\n          )}\n        </>\n      )}\n      </PageWrap>\n      </BackDrop>\n  );\n}\n","import { Box } from 'components/Box/Box';\nimport {errorImage }from 'images';\nimport { useEffect } from 'react';\nimport { t } from 'i18next';\n\nexport default function PageError() {\n  useEffect(() => {\n    document.title = `My Movies | ${t('title.error')}`;\n  });\n\n  return (\n    <Box maxWidth=\"800px\" mx=\"auto\" mt={6}>\n      <img src={errorImage} alt=\"error 404\" width=\"100%\" />\n    </Box>\n  );\n}\n","import axios from 'axios';\n\nconst MAIN_URL = process.env.REACT_APP_MAIN_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst fetchTrends = async (lang: string, page: number, abortSignal: AbortSignal) => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=${page}`, {signal: abortSignal});\n  return response.data;\n};\n\nconst fetchMovies = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchLibraryMovies = async (array: any[], lang: string) => {\n  const arrayOfMovies = array.map(async movie_id => {\n    return await axios\n      .get(`${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfMovies);\n  return response;\n};\n\nconst fetchActors = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/person?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchActorById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchAlbumActors = async (array: any[], lang: string) => {\n  const arrayOfActors = array.map(async actor_id => {\n    return await axios\n      .get(`${MAIN_URL}/person/${actor_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfActors);\n  return response;\n};\n\nconst fetchMoviesByActor = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/movie_credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchImagesByActor = async (id: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovieTrailer,\n  fetchLibraryMovies,\n  fetchActors,\n  fetchActorById,\n  fetchAlbumActors,\n  fetchMoviesByActor,\n  fetchImagesByActor,\n};\n"],"names":["DetailsName","styled","p","theme","space","fontSizes","l","colors","textTitle","DetailsImg","DetailsDescr","textPrimary","Bold","bold","DetailsHomePage","accent","Overlay","ModalWindow","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleEscape","removeEventListener","event","code","createPortal","onClick","currentTarget","target","formatRuntimeEn","time","hours","Math","floor","min","formatRuntimeUa","MovieDetails","toggleMovieInLibrary","movies","useState","movieItem","setMovieItem","error","setError","location","useLocation","params","useParams","backLink","useRef","state","from","includes","movieId","saved","setSaved","showModal","setShowModal","lang","t","toggleModal","fetchMovieById","then","data","title","catch","backdrop","backdrop_path","to","current","pathname","PageError","width","src","poster_path","imageplaceholder","alt","Box","release_date","first_air_date","slice","genres","map","genre","name","join","runtime","vote_average","toFixed","overview","Suspense","fallback","display","justifyContent","height","color","ariaLabel","visible","original_title","maxWidth","mx","mt","errorImage","MAIN_URL","process","API_KEY","fetchTrends","page","abortSignal","axios","signal","response","fetchMovies","query","id","fetchCastById","fetchReviewsById","fetchMovieTrailer","fetchLibraryMovies","array","arrayOfMovies","movie_id","console","log","Promise","all","fetchActors","fetchActorById","fetchAlbumActors","arrayOfActors","actor_id","fetchMoviesByActor","fetchImagesByActor"],"sourceRoot":""}