{"version":3,"file":"static/js/534.9052e2f5.chunk.js","mappings":"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","sources":["components/ActorCard/ActorCard.styled.tsx","components/ActorCard/ActorCard.tsx","components/BaseComps/BaseComps.tsx","components/Cast/Cast.tsx","services/api.ts"],"sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const ActorThumb = styled.div`\n  position: relative;\n  width: 200px;\n  height: 300px;\n  overflow: hidden;\n`;\n\nexport const ActorImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const ActorTitle = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  padding-bottom: ${(p: { theme: { space: number[]; }; }) => p.theme.space[2]}px;\n  background-color:  ${(p: { theme: { colors: { bcgTitle: string; }; }; }) => p.theme.colors.bcgTitle};\n  color:  ${(p: { theme: { colors: { textSecondary: string; }; }; }) => p.theme.colors.textSecondary};\n  font-size: 18px;\n  font-weight: 700;\n  text-align: center;\n\n  transform: translateY(100%);\n  transition: transform 250ms ease;\n\n  ${ActorThumb}:hover &,\n  ${ActorThumb}:focus & {\n    transform: translateY(0);\n  }\n`;\n\nexport const Character = styled.p`\n  font-style: italic;\n  font-weight: 400;\n`;\n","import {\n  ActorThumb,\n  ActorImg,\n  ActorTitle,\n  Character,\n} from 'components/ActorCard/ActorCard.styled';\nimport { nophoto } from 'images';\nimport { IActor } from 'components/types';\nimport { FC } from 'react';\n\ntype Actor = {\n  actor: IActor;\n};\n\nexport const ActorCard: FC<Actor> = ({ actor }) => (\n  <ActorThumb>\n    <ActorImg\n      width=\"200\"\n      src={actor.profile_path\n        ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n        : nophoto}\n      alt={actor.name} />\n    <ActorTitle>\n      <p>{actor.name}</p>\n      {actor.character && <Character>{actor.character}</Character>}\n    </ActorTitle>\n  </ActorThumb>\n);\n","import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h2`\n  color: ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px;\n  gap: ${(p: { theme: { space: number[]; }; }) => p.theme.space[3]}px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  box-shadow: none;\n  cursor: pointer;\n\n  transition: box-shadow 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${(p: { theme: { shadows: { blackShadow: string; }; }; }) => p.theme.shadows.blackShadow};\n  }\n`;\n","import { List, Item } from 'components/BaseComps/BaseComps';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation, NavLink } from 'react-router-dom';\nimport { fetchCastById } from 'services/api';\nimport { ActorCard } from 'components/ActorCard/ActorCard';\nimport { t } from 'i18next';\nimport { ICast } from 'components/types';\n\nexport default function Cast() {\n  const params = useParams() as any;\n  const [cast, setCast] = useState<Array<ICast>>([]);\n  const location = useLocation();\n  const lang = t('lang');\n\n  useEffect(() => {\n    fetchCastById(params.movieId, lang).then(data => {\n      setCast(data.cast);\n    });\n  }, [lang, params.movieId]);\n\n  return (\n    <>\n      <List>\n        {cast.map(actor => (\n          <Item key={actor.cast_id}>\n            <NavLink to={`/actors/${actor.id}`} state={{ from: location }}>\n              <ActorCard actor={actor} />\n            </NavLink>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst MAIN_URL = process.env.REACT_APP_MAIN_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst fetchTrends = async (lang: string, page: number) => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=${page}`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchLibraryMovies = async (array: any[], lang: string) => {\n  const arrayOfMovies = array.map(async movie_id => {\n    return await axios\n      .get(`${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfMovies);\n  return response;\n};\n\nconst fetchActors = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/person?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchActorById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchAlbumActors = async (array: any[], lang: string) => {\n  const arrayOfActors = array.map(async actor_id => {\n    return await axios\n      .get(`${MAIN_URL}/person/${actor_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfActors);\n  return response;\n};\n\nconst fetchMoviesByActor = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/movie_credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchImagesByActor = async (id: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovieTrailer,\n  fetchLibraryMovies,\n  fetchActors,\n  fetchActorById,\n  fetchAlbumActors,\n  fetchMoviesByActor,\n  fetchImagesByActor,\n};\n"],"names":["ActorThumb","ActorImg","ActorTitle","p","theme","space","colors","bcgTitle","textSecondary","Character","ActorCard","actor","width","src","profile_path","nophoto","alt","name","character","PageTitle","styled","textPrimary","List","Item","shadows","blackShadow","Cast","params","useParams","useState","cast","setCast","location","useLocation","lang","t","useEffect","fetchCastById","movieId","then","data","map","to","id","state","from","cast_id","MAIN_URL","process","API_KEY","fetchTrends","page","axios","response","fetchMovies","query","fetchMovieById","fetchReviewsById","fetchMovieTrailer","fetchLibraryMovies","array","arrayOfMovies","movie_id","catch","error","console","log","Promise","all","fetchActors","fetchActorById","fetchAlbumActors","arrayOfActors","actor_id","fetchMoviesByActor","fetchImagesByActor"],"sourceRoot":""}