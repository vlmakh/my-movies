{"version":3,"file":"static/js/344.1439e717.chunk.js","mappings":"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","sources":["components/ActorImages/ActorImages.styled.tsx","components/ActorImages/ActorImages.tsx","components/BaseComps/BaseComps.tsx","components/Modal/Modal.styled.tsx","components/Modal/Modal.tsx","services/api.ts"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ImgItemStyled = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import { ImgItemStyled } from './ActorImages.styled';\nimport { List, Item } from 'components/BaseComps/BaseComps';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchImagesByActor } from 'services/api';\nimport Modal from 'components/Modal/Modal';\nimport imageplaceholder from 'images/nophoto.jpg';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport { Box } from 'components/Box/Box';\nimport { ImageType } from 'components/types';\n\nexport default function ActorImages() {\n  const { actorId } = useParams<{actorId: string | undefined}>() as any;\n  const [images, setImages] = useState<Array<ImageType>>([]);\n  const [showModal, setShowModal] = useState(false);\n  const [bigPhotoIdx, setBigPhotoIdx] = useState(0);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onImageClick = (idx: number) => {\n    setBigPhotoIdx(idx);\n    toggleModal();\n  };\n\n  useEffect(() => {\n    fetchImagesByActor(actorId).then(data => {\n      setImages(data.profiles);\n    });\n  }, [actorId]);\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    initialSlide: bigPhotoIdx,\n    // lazyLoad: 'ondemand',\n    draggable: true,\n  };\n\n  return (\n    <>\n      <List>\n        {images.map((image, idx) => (\n          <Item key={image.file_path}>\n            <ImgItemStyled\n              width=\"200\"\n              src={\n                image.file_path\n                  ? `https://image.tmdb.org/t/p/w200${image.file_path}`\n                  : imageplaceholder\n              }\n              alt={image.file_path}\n              loading=\"lazy\"\n              onClick={() => onImageClick(idx)}\n            />\n          </Item>\n        ))}\n      </List>\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <Slider {...settings}>\n            {images.map(image => (\n              <Box key={image.file_path} display=\"flex\" alignItems=\"center\">\n                <img\n                  width=\"100%\"\n                  src={`https://image.tmdb.org/t/p/w500${image.file_path}`}\n                  alt={image.file_path}\n                />\n              </Box>\n            ))}\n          </Slider>\n        </Modal>\n      )}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const PageTitle = styled.h2`\n  color: ${(p: { theme: { colors: { textPrimary: string; }; }; }) => p.theme.colors.textPrimary};\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: ${(p: { theme: { space: number[]; }; }) => p.theme.space[4]}px;\n  gap: ${(p: { theme: { space: number[]; }; }) => p.theme.space[3]}px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  box-shadow: none;\n  cursor: pointer;\n\n  transition: box-shadow 250ms linear;\n\n  :hover,\n  :focus {\n    box-shadow: ${(p: { theme: { shadows: { blackShadow: string; }; }; }) => p.theme.shadows.blackShadow};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  width: 500px;\n  max-height: calc(100vh - 24px);\n  overflow-y: clip;\n  overflow-x: visible;  \n\n @media (max-width: 480px) {\n    width: 100%;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect, ReactNode } from 'react';\nimport { Overlay, ModalWindow } from './Modal.styled';\nimport { createPortal } from 'react-dom';\n\ntype PortalPropsType = {\n  children: ReactNode;\n  onClose: () => void;\n};\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLDivElement;\n\nexport default function Modal({ onClose, children }: PortalPropsType) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleEscape);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  });\n\n  const handleEscape = (event: { code: string; }) => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdrop = (event: { currentTarget: any; target: any; }) => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdrop}>\n      <ModalWindow>{children}</ModalWindow>\n    </Overlay>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n","import axios from 'axios';\n\nconst MAIN_URL = process.env.REACT_APP_MAIN_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst fetchTrends = async (lang: string, page: number) => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=${page}`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchLibraryMovies = async (array: any[], lang: string) => {\n  const arrayOfMovies = array.map(async movie_id => {\n    return await axios\n      .get(`${MAIN_URL}/movie/${movie_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfMovies);\n  return response;\n};\n\nconst fetchActors = async (query: string, page: number, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/person?api_key=${API_KEY}&query=${query}&language=${lang}&page=${page}&include_adult=false`\n  );\n  return response.data;\n};\n\nconst fetchActorById = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchAlbumActors = async (array: any[], lang: string) => {\n  const arrayOfActors = array.map(async actor_id => {\n    return await axios\n      .get(`${MAIN_URL}/person/${actor_id}?api_key=${API_KEY}&language=${lang}`)\n      .then(response => {\n        return response.data;\n      })\n      .catch(error => console.log(error));\n  });\n\n  const response = await Promise.all(arrayOfActors);\n  return response;\n};\n\nconst fetchMoviesByActor = async (id: string, lang: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/movie_credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchImagesByActor = async (id: string) => {\n  const response = await axios.get(\n    `${MAIN_URL}/person/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovies,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviewsById,\n  fetchMovieTrailer,\n  fetchLibraryMovies,\n  fetchActors,\n  fetchActorById,\n  fetchAlbumActors,\n  fetchMoviesByActor,\n  fetchImagesByActor,\n};\n"],"names":["ImgItemStyled","styled","ActorImages","actorId","useParams","useState","images","setImages","showModal","setShowModal","bigPhotoIdx","setBigPhotoIdx","toggleModal","useEffect","fetchImagesByActor","then","data","profiles","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","draggable","map","image","idx","width","src","file_path","imageplaceholder","alt","loading","onClick","onImageClick","Modal","onClose","Box","display","alignItems","PageTitle","p","theme","colors","textPrimary","List","space","Item","shadows","blackShadow","Overlay","ModalWindow","modalRoot","document","querySelector","children","window","addEventListener","handleEscape","removeEventListener","event","code","createPortal","currentTarget","target","MAIN_URL","process","API_KEY","fetchTrends","lang","page","axios","response","fetchMovies","query","fetchMovieById","id","fetchCastById","fetchReviewsById","fetchMovieTrailer","fetchLibraryMovies","array","arrayOfMovies","movie_id","catch","error","console","log","Promise","all","fetchActors","fetchActorById","fetchAlbumActors","arrayOfActors","actor_id","fetchMoviesByActor"],"sourceRoot":""}