{"version":3,"file":"static/js/111.878d9fc7.chunk.js","mappings":"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","sources":["services/formatDate.js","pages/ActorDetails.js"],"sourcesContent":["import { format } from 'date-fns';\nimport { uk } from 'date-fns/locale';\n\nexport const formatDateEn = date => {\n  if (date) {\n    return format(Date.parse(date), 'MMMM dd, yyyy');\n  }\n};\n\nexport const formatDateUa = date => {\n  if (date) {\n    return format(Date.parse(date), 'dd MMMM yyyy', { locale: uk });\n  }\n};\n","import {\n  DetailsDescr,\n  DetailsImg,\n  DetailsHomePage,\n  DetailsName,\n} from 'components/DetailsComps/DetailsComps';\nimport {\n  StyledBtn,\n  StyledLinkBtn,\n  BackLinkBtn,\n} from 'components/Buttons/Buttons';\nimport {\n  PageWrap,\n  Box,\n  MainInfo,\n  BtnContainer,\n  ImgThumb,\n} from 'components/Box/Box';\nimport { useState, useEffect, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchActorById } from 'services/api';\nimport PageError from 'pages/PageError';\nimport Modal from 'components/Modal/Modal';\nimport imageplaceholder from 'images/noposter.jpg';\nimport { formatDateEn, formatDateUa } from 'services/formatDate';\nimport { Suspense } from 'react';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport { t } from 'i18next';\n\nexport default function ActorDetails({ actors, toggleActorsInAlbum }) {\n  const [personInfo, setPersonInfo] = useState(null);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const params = useParams();\n  const [saved, setSaved] = useState(\n    actors.includes(params.actorId) ? true : false\n  );\n  const backLink = useRef(location.state?.from ?? '/');\n  const [showModal, setShowModal] = useState(false);\n  const lang = t('lang');\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  useEffect(() => {\n    fetchActorById(params.actorId, lang)\n      .then(data => {\n        setPersonInfo(data);\n      })\n      .catch(error => {\n        setError(true);\n      });\n  }, [lang, params.actorId]);\n\n  const toggleSaveBtn = () => {\n    setSaved(!saved);\n  };\n\n  const handleSaveToAlbum = () => {\n    toggleActorsInAlbum(params.actorId);\n    toggleSaveBtn();\n  };\n\n  return (\n    <PageWrap>\n      <BackLinkBtn to={backLink.current}>\n        {!backLink.current.pathname ? t('buttons.home') : t('buttons.back')}\n      </BackLinkBtn>\n\n      {error && <PageError />}\n\n      {personInfo && (\n        <>\n          <DetailsName>{personInfo.name}</DetailsName>\n          <MainInfo>\n            <ImgThumb>\n              <DetailsImg\n                width=\"200\"\n                src={\n                  personInfo.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${personInfo.profile_path}`\n                    : imageplaceholder\n                }\n                alt={`${personInfo.name}`}\n                onClick={toggleModal}\n              />\n            </ImgThumb>\n\n            <Box>\n              {personInfo.birthday && (\n                <DetailsDescr>\n                  {t('actor.birth')}\n                  {lang === 'uk-UA'\n                    ? `${formatDateUa(personInfo.birthday)}`\n                    : `${formatDateEn(personInfo.birthday)}`}\n                </DetailsDescr>\n              )}\n              {personInfo.deathday && (\n                <DetailsDescr>\n                  {t('actor.death')}\n                  {lang === 'uk-UA'\n                    ? `${formatDateUa(personInfo.deathday)}`\n                    : `${formatDateEn(personInfo.deathday)}`}\n                </DetailsDescr>\n              )}\n              {personInfo.homepage && (\n                <DetailsDescr>\n                  {t('actor.homepage')}\n                  <DetailsHomePage\n                    href={personInfo.homepage}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {personInfo.homepage}\n                  </DetailsHomePage>\n                </DetailsDescr>\n              )}\n\n              <BtnContainer>\n                <StyledLinkBtn to=\"biography\" state={personInfo.biography}>\n                  {t('buttons.biography')}\n                </StyledLinkBtn>\n                <StyledLinkBtn to=\"movies\">{t('buttons.movies')}</StyledLinkBtn>\n                <StyledLinkBtn to=\"images\">{t('buttons.photo')}</StyledLinkBtn>\n                <StyledBtn onClick={handleSaveToAlbum} saved={saved}>\n                  {saved ? t('buttons.saved') : t('buttons.save')}\n                </StyledBtn>\n              </BtnContainer>\n            </Box>\n          </MainInfo>\n\n          <Suspense\n            fallback={\n              <Box display=\"flex\" justifyContent=\"center\">\n                <ThreeCircles\n                  height=\"100\"\n                  width=\"100\"\n                  color=\"#bcc3ce\"\n                  ariaLabel=\"Three-Circles-rotating\"\n                  visible={true}\n                />\n              </Box>\n            }\n          >\n            <Outlet />\n          </Suspense>\n\n          {showModal && (\n            <Modal onClose={toggleModal}>\n              <img\n                width=\"100%\"\n                src={\n                  personInfo.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${personInfo.profile_path}`\n                    : imageplaceholder\n                }\n                alt={personInfo.name}\n              />\n            </Modal>\n          )}\n        </>\n      )}\n    </PageWrap>\n  );\n}\n\nActorDetails.propTypes = {\n  toggleActorsInAlbum: PropTypes.func.isRequired,\n  actors: PropTypes.array.isRequired,\n};\n"],"names":["formatDateEn","date","format","Date","parse","formatDateUa","locale","uk","ActorDetails","actors","toggleActorsInAlbum","useState","personInfo","setPersonInfo","error","setError","location","useLocation","params","useParams","includes","actorId","saved","setSaved","backLink","useRef","state","from","showModal","setShowModal","lang","t","toggleModal","useEffect","fetchActorById","then","data","catch","to","current","pathname","PageError","name","width","src","profile_path","imageplaceholder","alt","onClick","Box","birthday","deathday","homepage","href","target","rel","biography","Suspense","fallback","display","justifyContent","height","color","ariaLabel","visible","Modal","onClose"],"sourceRoot":""}